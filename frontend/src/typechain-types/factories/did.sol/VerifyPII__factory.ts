/* Autogenerated file. Do not edit manually. */
/* tslint:disable */
/* eslint-disable */
import {
  Contract,
  ContractFactory,
  ContractTransactionResponse,
  Interface,
} from "ethers";
import type { Signer, ContractDeployTransaction, ContractRunner } from "ethers";
import type { NonPayableOverrides } from "../../common";
import type { VerifyPII, VerifyPIIInterface } from "../../did.sol/VerifyPII";

const _abi = [
  {
    inputs: [
      {
        internalType: "bytes32",
        name: "_hashedMessage",
        type: "bytes32",
      },
      {
        internalType: "uint8",
        name: "_v",
        type: "uint8",
      },
      {
        internalType: "bytes32",
        name: "_r",
        type: "bytes32",
      },
      {
        internalType: "bytes32",
        name: "_s",
        type: "bytes32",
      },
    ],
    name: "VerifyMessage",
    outputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "pure",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "bytes32",
        name: "_messageHash",
        type: "bytes32",
      },
    ],
    name: "getEthSignedMessageHashV1",
    outputs: [
      {
        internalType: "bytes32",
        name: "",
        type: "bytes32",
      },
    ],
    stateMutability: "pure",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "string",
        name: "_message",
        type: "string",
      },
    ],
    name: "getMessageHashV2",
    outputs: [
      {
        internalType: "bytes32",
        name: "",
        type: "bytes32",
      },
    ],
    stateMutability: "pure",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "string",
        name: "_message",
        type: "string",
      },
      {
        internalType: "bytes",
        name: "signature",
        type: "bytes",
      },
    ],
    name: "getSignerAddressFromSignatureV1",
    outputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "pure",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "_signer",
        type: "address",
      },
    ],
    name: "getVerifiedIdentityStatus",
    outputs: [
      {
        internalType: "bool",
        name: "",
        type: "bool",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "bytes32",
        name: "_ethSignedMessageHash",
        type: "bytes32",
      },
      {
        internalType: "bytes",
        name: "_signature",
        type: "bytes",
      },
    ],
    name: "recoverSigner",
    outputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "pure",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "bytes",
        name: "sig",
        type: "bytes",
      },
    ],
    name: "splitSignature",
    outputs: [
      {
        internalType: "bytes32",
        name: "r",
        type: "bytes32",
      },
      {
        internalType: "bytes32",
        name: "s",
        type: "bytes32",
      },
      {
        internalType: "uint8",
        name: "v",
        type: "uint8",
      },
    ],
    stateMutability: "pure",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "string",
        name: "_message",
        type: "string",
      },
      {
        internalType: "bytes",
        name: "signature",
        type: "bytes",
      },
      {
        internalType: "address",
        name: "_signer",
        type: "address",
      },
    ],
    name: "verifySignatureV1",
    outputs: [
      {
        internalType: "bool",
        name: "",
        type: "bool",
      },
    ],
    stateMutability: "pure",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "string",
        name: "_message",
        type: "string",
      },
      {
        internalType: "bytes",
        name: "signature",
        type: "bytes",
      },
      {
        internalType: "address",
        name: "_signer",
        type: "address",
      },
    ],
    name: "verifySignatureV2",
    outputs: [
      {
        internalType: "bool",
        name: "",
        type: "bool",
      },
    ],
    stateMutability: "nonpayable",
    type: "function",
  },
] as const;

const _bytecode =
  "0x608060405234801561001057600080fd5b50610f5a806100206000396000f3fe608060405234801561001057600080fd5b50600436106100935760003560e01c806397aba7f91161006657806397aba7f914610158578063a7bb580314610188578063af15221d146101ba578063e5bff21d146101ea578063f65e73fc1461021a57610093565b8063257af50d14610098578063480b87e2146100c8578063659934c1146100f857806378ea704114610128575b600080fd5b6100b260048036038101906100ad91906108e7565b61024a565b6040516100bf919061098d565b60405180910390f35b6100e260048036038101906100dd91906109a8565b6102a8565b6040516100ef919061098d565b60405180910390f35b610112600480360381019061010d9190610a44565b6102fd565b60405161011f9190610aba565b60405180910390f35b610142600480360381019061013d9190610ad5565b6103c6565b60405161014f9190610b11565b60405180910390f35b610172600480360381019061016d9190610b2c565b6103f6565b60405161017f9190610aba565b60405180910390f35b6101a2600480360381019061019d9190610b88565b610465565b6040516101b193929190610be0565b60405180910390f35b6101d460048036038101906101cf9190610c17565b6104cd565b6040516101e19190610b11565b60405180910390f35b61020460048036038101906101ff9190610c60565b6104fd565b6040516102119190610aba565b60405180910390f35b610234600480360381019061022f91906108e7565b61052c565b604051610241919061098d565b60405180910390f35b600080610256856104cd565b90506000610263826103c6565b90508373ffffffffffffffffffffffffffffffffffffffff1661028682876103f6565b73ffffffffffffffffffffffffffffffffffffffff1614925050509392505050565b60008060008373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060009054906101000a900460ff169050919050565b6000806040518060400160405280601c81526020017f19457468657265756d205369676e6564204d6573736167653a0a33320000000081525090506000818760405160200161034d929190610d6a565b60405160208183030381529060405280519060200120905060006001828888886040516000815260200160405260405161038a9493929190610d92565b6020604051602081039080840390855afa1580156103ac573d6000803e3d6000fd5b505050602060405103519050809350505050949350505050565b6000816040516020016103d99190610e2e565b604051602081830303815290604052805190602001209050919050565b60008060008061040585610465565b9250925092506001868285856040516000815260200160405260405161042e9493929190610d92565b6020604051602081039080840390855afa158015610450573d6000803e3d6000fd5b50505060206040510351935050505092915050565b600080600060418451146104ae576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004016104a590610eb1565b60405180910390fd5b6020840151925060408401519150606084015160001a90509193909250565b6000816040516020016104e09190610f0d565b604051602081830303815290604052805190602001209050919050565b600080610509846104cd565b90506000610516826103c6565b905061052281856103f6565b9250505092915050565b600080610538856104cd565b90506000610545826103c6565b90508373ffffffffffffffffffffffffffffffffffffffff1661056882876103f6565b73ffffffffffffffffffffffffffffffffffffffff16036105df5760016000808673ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060006101000a81548160ff021916908315150217905550610637565b60008060008673ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060006101000a81548160ff0219169083151502179055505b6000808573ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060009054906101000a900460ff16925050509392505050565b6000604051905090565b600080fd5b600080fd5b600080fd5b600080fd5b6000601f19601f8301169050919050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052604160045260246000fd5b6106f5826106ac565b810181811067ffffffffffffffff82111715610714576107136106bd565b5b80604052505050565b600061072761068e565b905061073382826106ec565b919050565b600067ffffffffffffffff821115610753576107526106bd565b5b61075c826106ac565b9050602081019050919050565b82818337600083830152505050565b600061078b61078684610738565b61071d565b9050828152602081018484840111156107a7576107a66106a7565b5b6107b2848285610769565b509392505050565b600082601f8301126107cf576107ce6106a2565b5b81356107df848260208601610778565b91505092915050565b600067ffffffffffffffff821115610803576108026106bd565b5b61080c826106ac565b9050602081019050919050565b600061082c610827846107e8565b61071d565b905082815260208101848484011115610848576108476106a7565b5b610853848285610769565b509392505050565b600082601f8301126108705761086f6106a2565b5b8135610880848260208601610819565b91505092915050565b600073ffffffffffffffffffffffffffffffffffffffff82169050919050565b60006108b482610889565b9050919050565b6108c4816108a9565b81146108cf57600080fd5b50565b6000813590506108e1816108bb565b92915050565b600080600060608486031215610900576108ff610698565b5b600084013567ffffffffffffffff81111561091e5761091d61069d565b5b61092a868287016107ba565b935050602084013567ffffffffffffffff81111561094b5761094a61069d565b5b6109578682870161085b565b9250506040610968868287016108d2565b9150509250925092565b60008115159050919050565b61098781610972565b82525050565b60006020820190506109a2600083018461097e565b92915050565b6000602082840312156109be576109bd610698565b5b60006109cc848285016108d2565b91505092915050565b6000819050919050565b6109e8816109d5565b81146109f357600080fd5b50565b600081359050610a05816109df565b92915050565b600060ff82169050919050565b610a2181610a0b565b8114610a2c57600080fd5b50565b600081359050610a3e81610a18565b92915050565b60008060008060808587031215610a5e57610a5d610698565b5b6000610a6c878288016109f6565b9450506020610a7d87828801610a2f565b9350506040610a8e878288016109f6565b9250506060610a9f878288016109f6565b91505092959194509250565b610ab4816108a9565b82525050565b6000602082019050610acf6000830184610aab565b92915050565b600060208284031215610aeb57610aea610698565b5b6000610af9848285016109f6565b91505092915050565b610b0b816109d5565b82525050565b6000602082019050610b266000830184610b02565b92915050565b60008060408385031215610b4357610b42610698565b5b6000610b51858286016109f6565b925050602083013567ffffffffffffffff811115610b7257610b7161069d565b5b610b7e8582860161085b565b9150509250929050565b600060208284031215610b9e57610b9d610698565b5b600082013567ffffffffffffffff811115610bbc57610bbb61069d565b5b610bc88482850161085b565b91505092915050565b610bda81610a0b565b82525050565b6000606082019050610bf56000830186610b02565b610c026020830185610b02565b610c0f6040830184610bd1565b949350505050565b600060208284031215610c2d57610c2c610698565b5b600082013567ffffffffffffffff811115610c4b57610c4a61069d565b5b610c57848285016107ba565b91505092915050565b60008060408385031215610c7757610c76610698565b5b600083013567ffffffffffffffff811115610c9557610c9461069d565b5b610ca1858286016107ba565b925050602083013567ffffffffffffffff811115610cc257610cc161069d565b5b610cce8582860161085b565b9150509250929050565b600081519050919050565b600081905092915050565b60005b83811015610d0c578082015181840152602081019050610cf1565b60008484015250505050565b6000610d2382610cd8565b610d2d8185610ce3565b9350610d3d818560208601610cee565b80840191505092915050565b6000819050919050565b610d64610d5f826109d5565b610d49565b82525050565b6000610d768285610d18565b9150610d828284610d53565b6020820191508190509392505050565b6000608082019050610da76000830187610b02565b610db46020830186610bd1565b610dc16040830185610b02565b610dce6060830184610b02565b95945050505050565b600081905092915050565b7f19457468657265756d205369676e6564204d6573736167653a0a333200000000600082015250565b6000610e18601c83610dd7565b9150610e2382610de2565b601c82019050919050565b6000610e3982610e0b565b9150610e458284610d53565b60208201915081905092915050565b600082825260208201905092915050565b7f696e76616c6964207369676e6174757265206c656e6774680000000000000000600082015250565b6000610e9b601883610e54565b9150610ea682610e65565b602082019050919050565b60006020820190508181036000830152610eca81610e8e565b9050919050565b600081519050919050565b6000610ee782610ed1565b610ef18185610dd7565b9350610f01818560208601610cee565b80840191505092915050565b6000610f198284610edc565b91508190509291505056fea26469706673582212208553a1b986a2cd4cb1d433399773035e685d2323a27b3d6e2d8c18b4a534f69e64736f6c63430008130033";

type VerifyPIIConstructorParams =
  | [signer?: Signer]
  | ConstructorParameters<typeof ContractFactory>;

const isSuperArgs = (
  xs: VerifyPIIConstructorParams
): xs is ConstructorParameters<typeof ContractFactory> => xs.length > 1;

export class VerifyPII__factory extends ContractFactory {
  constructor(...args: VerifyPIIConstructorParams) {
    if (isSuperArgs(args)) {
      super(...args);
    } else {
      super(_abi, _bytecode, args[0]);
    }
  }

  override getDeployTransaction(
    overrides?: NonPayableOverrides & { from?: string }
  ): Promise<ContractDeployTransaction> {
    return super.getDeployTransaction(overrides || {});
  }
  override deploy(overrides?: NonPayableOverrides & { from?: string }) {
    return super.deploy(overrides || {}) as Promise<
      VerifyPII & {
        deploymentTransaction(): ContractTransactionResponse;
      }
    >;
  }
  override connect(runner: ContractRunner | null): VerifyPII__factory {
    return super.connect(runner) as VerifyPII__factory;
  }

  static readonly bytecode = _bytecode;
  static readonly abi = _abi;
  static createInterface(): VerifyPIIInterface {
    return new Interface(_abi) as VerifyPIIInterface;
  }
  static connect(address: string, runner?: ContractRunner | null): VerifyPII {
    return new Contract(address, _abi, runner) as unknown as VerifyPII;
  }
}
