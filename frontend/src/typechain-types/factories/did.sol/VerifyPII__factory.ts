/* Autogenerated file. Do not edit manually. */
/* tslint:disable */
/* eslint-disable */
import {
  Contract,
  ContractFactory,
  ContractTransactionResponse,
  Interface,
} from "ethers";
import type { Signer, ContractDeployTransaction, ContractRunner } from "ethers";
import type { NonPayableOverrides } from "../../common";
import type { VerifyPII, VerifyPIIInterface } from "../../did.sol/VerifyPII";

const _abi = [
  {
    inputs: [
      {
        internalType: "bytes32",
        name: "_hashedMessage",
        type: "bytes32",
      },
      {
        internalType: "uint8",
        name: "_v",
        type: "uint8",
      },
      {
        internalType: "bytes32",
        name: "_r",
        type: "bytes32",
      },
      {
        internalType: "bytes32",
        name: "_s",
        type: "bytes32",
      },
    ],
    name: "VerifyMessage",
    outputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "pure",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "bytes32",
        name: "_messageHash",
        type: "bytes32",
      },
    ],
    name: "getEthSignedMessageHashV1",
    outputs: [
      {
        internalType: "bytes32",
        name: "",
        type: "bytes32",
      },
    ],
    stateMutability: "pure",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "string",
        name: "_message",
        type: "string",
      },
    ],
    name: "getMessageHashV2",
    outputs: [
      {
        internalType: "bytes32",
        name: "",
        type: "bytes32",
      },
    ],
    stateMutability: "pure",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "string",
        name: "_message",
        type: "string",
      },
      {
        internalType: "bytes",
        name: "signature",
        type: "bytes",
      },
    ],
    name: "getSignerAddressFromSignatureV1",
    outputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "pure",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "bytes32",
        name: "_ethSignedMessageHash",
        type: "bytes32",
      },
      {
        internalType: "bytes",
        name: "_signature",
        type: "bytes",
      },
    ],
    name: "recoverSigner",
    outputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "pure",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "bytes",
        name: "sig",
        type: "bytes",
      },
    ],
    name: "splitSignature",
    outputs: [
      {
        internalType: "bytes32",
        name: "r",
        type: "bytes32",
      },
      {
        internalType: "bytes32",
        name: "s",
        type: "bytes32",
      },
      {
        internalType: "uint8",
        name: "v",
        type: "uint8",
      },
    ],
    stateMutability: "pure",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "string",
        name: "_message",
        type: "string",
      },
      {
        internalType: "bytes",
        name: "signature",
        type: "bytes",
      },
      {
        internalType: "address",
        name: "_signer",
        type: "address",
      },
    ],
    name: "verifySignatureV1",
    outputs: [
      {
        internalType: "bool",
        name: "",
        type: "bool",
      },
    ],
    stateMutability: "pure",
    type: "function",
  },
] as const;

const _bytecode =
  "0x608060405234801561001057600080fd5b50610d00806100206000396000f3fe608060405234801561001057600080fd5b506004361061007d5760003560e01c806397aba7f91161005b57806397aba7f914610112578063a7bb580314610142578063af15221d14610174578063e5bff21d146101a45761007d565b8063257af50d14610082578063659934c1146100b257806378ea7041146100e2575b600080fd5b61009c600480360381019061009791906106ba565b6101d4565b6040516100a99190610760565b60405180910390f35b6100cc60048036038101906100c791906107ea565b610232565b6040516100d99190610860565b60405180910390f35b6100fc60048036038101906100f7919061087b565b6102fb565b60405161010991906108b7565b60405180910390f35b61012c600480360381019061012791906108d2565b61032b565b6040516101399190610860565b60405180910390f35b61015c6004803603810190610157919061092e565b61039a565b60405161016b93929190610986565b60405180910390f35b61018e600480360381019061018991906109bd565b610402565b60405161019b91906108b7565b60405180910390f35b6101be60048036038101906101b99190610a06565b610432565b6040516101cb9190610860565b60405180910390f35b6000806101e085610402565b905060006101ed826102fb565b90508373ffffffffffffffffffffffffffffffffffffffff16610210828761032b565b73ffffffffffffffffffffffffffffffffffffffff1614925050509392505050565b6000806040518060400160405280601c81526020017f19457468657265756d205369676e6564204d6573736167653a0a333200000000815250905060008187604051602001610282929190610b10565b6040516020818303038152906040528051906020012090506000600182888888604051600081526020016040526040516102bf9493929190610b38565b6020604051602081039080840390855afa1580156102e1573d6000803e3d6000fd5b505050602060405103519050809350505050949350505050565b60008160405160200161030e9190610bd4565b604051602081830303815290604052805190602001209050919050565b60008060008061033a8561039a565b925092509250600186828585604051600081526020016040526040516103639493929190610b38565b6020604051602081039080840390855afa158015610385573d6000803e3d6000fd5b50505060206040510351935050505092915050565b600080600060418451146103e3576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004016103da90610c57565b60405180910390fd5b6020840151925060408401519150606084015160001a90509193909250565b6000816040516020016104159190610cb3565b604051602081830303815290604052805190602001209050919050565b60008061043e84610402565b9050600061044b826102fb565b9050610457818561032b565b9250505092915050565b6000604051905090565b600080fd5b600080fd5b600080fd5b600080fd5b6000601f19601f8301169050919050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052604160045260246000fd5b6104c88261047f565b810181811067ffffffffffffffff821117156104e7576104e6610490565b5b80604052505050565b60006104fa610461565b905061050682826104bf565b919050565b600067ffffffffffffffff82111561052657610525610490565b5b61052f8261047f565b9050602081019050919050565b82818337600083830152505050565b600061055e6105598461050b565b6104f0565b90508281526020810184848401111561057a5761057961047a565b5b61058584828561053c565b509392505050565b600082601f8301126105a2576105a1610475565b5b81356105b284826020860161054b565b91505092915050565b600067ffffffffffffffff8211156105d6576105d5610490565b5b6105df8261047f565b9050602081019050919050565b60006105ff6105fa846105bb565b6104f0565b90508281526020810184848401111561061b5761061a61047a565b5b61062684828561053c565b509392505050565b600082601f83011261064357610642610475565b5b81356106538482602086016105ec565b91505092915050565b600073ffffffffffffffffffffffffffffffffffffffff82169050919050565b60006106878261065c565b9050919050565b6106978161067c565b81146106a257600080fd5b50565b6000813590506106b48161068e565b92915050565b6000806000606084860312156106d3576106d261046b565b5b600084013567ffffffffffffffff8111156106f1576106f0610470565b5b6106fd8682870161058d565b935050602084013567ffffffffffffffff81111561071e5761071d610470565b5b61072a8682870161062e565b925050604061073b868287016106a5565b9150509250925092565b60008115159050919050565b61075a81610745565b82525050565b60006020820190506107756000830184610751565b92915050565b6000819050919050565b61078e8161077b565b811461079957600080fd5b50565b6000813590506107ab81610785565b92915050565b600060ff82169050919050565b6107c7816107b1565b81146107d257600080fd5b50565b6000813590506107e4816107be565b92915050565b600080600080608085870312156108045761080361046b565b5b60006108128782880161079c565b9450506020610823878288016107d5565b93505060406108348782880161079c565b92505060606108458782880161079c565b91505092959194509250565b61085a8161067c565b82525050565b60006020820190506108756000830184610851565b92915050565b6000602082840312156108915761089061046b565b5b600061089f8482850161079c565b91505092915050565b6108b18161077b565b82525050565b60006020820190506108cc60008301846108a8565b92915050565b600080604083850312156108e9576108e861046b565b5b60006108f78582860161079c565b925050602083013567ffffffffffffffff81111561091857610917610470565b5b6109248582860161062e565b9150509250929050565b6000602082840312156109445761094361046b565b5b600082013567ffffffffffffffff81111561096257610961610470565b5b61096e8482850161062e565b91505092915050565b610980816107b1565b82525050565b600060608201905061099b60008301866108a8565b6109a860208301856108a8565b6109b56040830184610977565b949350505050565b6000602082840312156109d3576109d261046b565b5b600082013567ffffffffffffffff8111156109f1576109f0610470565b5b6109fd8482850161058d565b91505092915050565b60008060408385031215610a1d57610a1c61046b565b5b600083013567ffffffffffffffff811115610a3b57610a3a610470565b5b610a478582860161058d565b925050602083013567ffffffffffffffff811115610a6857610a67610470565b5b610a748582860161062e565b9150509250929050565b600081519050919050565b600081905092915050565b60005b83811015610ab2578082015181840152602081019050610a97565b60008484015250505050565b6000610ac982610a7e565b610ad38185610a89565b9350610ae3818560208601610a94565b80840191505092915050565b6000819050919050565b610b0a610b058261077b565b610aef565b82525050565b6000610b1c8285610abe565b9150610b288284610af9565b6020820191508190509392505050565b6000608082019050610b4d60008301876108a8565b610b5a6020830186610977565b610b6760408301856108a8565b610b7460608301846108a8565b95945050505050565b600081905092915050565b7f19457468657265756d205369676e6564204d6573736167653a0a333200000000600082015250565b6000610bbe601c83610b7d565b9150610bc982610b88565b601c82019050919050565b6000610bdf82610bb1565b9150610beb8284610af9565b60208201915081905092915050565b600082825260208201905092915050565b7f696e76616c6964207369676e6174757265206c656e6774680000000000000000600082015250565b6000610c41601883610bfa565b9150610c4c82610c0b565b602082019050919050565b60006020820190508181036000830152610c7081610c34565b9050919050565b600081519050919050565b6000610c8d82610c77565b610c978185610b7d565b9350610ca7818560208601610a94565b80840191505092915050565b6000610cbf8284610c82565b91508190509291505056fea26469706673582212202f380cad0fe11c16682a481ebea24d8adceb58c7f8c13bf71281bce95340812164736f6c63430008130033";

type VerifyPIIConstructorParams =
  | [signer?: Signer]
  | ConstructorParameters<typeof ContractFactory>;

const isSuperArgs = (
  xs: VerifyPIIConstructorParams
): xs is ConstructorParameters<typeof ContractFactory> => xs.length > 1;

export class VerifyPII__factory extends ContractFactory {
  constructor(...args: VerifyPIIConstructorParams) {
    if (isSuperArgs(args)) {
      super(...args);
    } else {
      super(_abi, _bytecode, args[0]);
    }
  }

  override getDeployTransaction(
    overrides?: NonPayableOverrides & { from?: string }
  ): Promise<ContractDeployTransaction> {
    return super.getDeployTransaction(overrides || {});
  }
  override deploy(overrides?: NonPayableOverrides & { from?: string }) {
    return super.deploy(overrides || {}) as Promise<
      VerifyPII & {
        deploymentTransaction(): ContractTransactionResponse;
      }
    >;
  }
  override connect(runner: ContractRunner | null): VerifyPII__factory {
    return super.connect(runner) as VerifyPII__factory;
  }

  static readonly bytecode = _bytecode;
  static readonly abi = _abi;
  static createInterface(): VerifyPIIInterface {
    return new Interface(_abi) as VerifyPIIInterface;
  }
  static connect(address: string, runner?: ContractRunner | null): VerifyPII {
    return new Contract(address, _abi, runner) as unknown as VerifyPII;
  }
}
